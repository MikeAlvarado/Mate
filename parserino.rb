#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


  require_relative 'lexerino'
  $line_number = 0

class Mate < Racc::Parser

module_eval(<<'...end parser.y/module_eval...', 'parser.y', 69)

  def parse(input)
    scan_file(input)
  end

  def on_error(t, val, vstack)
    raise ParseError, sprintf("\nParsing error on value %s (%s) found on line: %i", val[0].inspect, token_to_str(t) || '?', $line_number)
  end
...end parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    18,    11,    40,    20,     5,     6,     8,    12,    21,     9,
     2,    22,    13,    15,    23,    24,    25,    16,     3,    26,
    28,    29,    31,    34,    35,    36,    37,    38,    39,     4,
    42,    44,    45,    46,    47,    48,    49,    50,    51,    52,
    53,    56,    57,    58,    59,    60,    62,    63,    65,    66,
    67 ]

racc_action_check = [
    15,     8,    34,    15,     3,     4,     6,     8,    15,     7,
     0,    15,    10,    13,    15,    15,    15,    14,     1,    17,
    18,    19,    21,    27,    28,    30,    31,    32,    33,     2,
    36,    38,    39,    40,    41,    42,    43,    45,    46,    47,
    48,    52,    53,    54,    55,    56,    60,    61,    63,    64,
    66 ]

racc_action_pointer = [
     8,    18,    26,     4,     1,   nil,     0,     4,    -2,   nil,
     5,   nil,   nil,    10,     9,   -10,   nil,    16,    17,     9,
   nil,     3,   nil,   nil,   nil,   nil,   nil,    12,     9,   nil,
    12,     9,     5,     7,    -2,   nil,    16,   nil,     8,    29,
    21,    14,    32,    19,   nil,    10,    33,    18,    25,   nil,
   nil,   nil,    23,    26,    16,    32,    26,   nil,   nil,   nil,
    30,    32,   nil,    31,    30,   nil,    28,   nil ]

racc_action_default = [
   -26,   -26,   -26,   -26,   -26,    68,   -26,   -26,   -26,    -1,
   -26,    -3,    -4,    -5,   -26,   -26,    -2,   -26,    -7,   -26,
   -11,   -26,   -19,   -21,   -22,   -23,    -6,   -26,   -26,   -10,
   -26,   -26,   -26,   -26,   -26,   -16,   -26,   -14,   -26,   -26,
   -26,   -26,   -26,   -26,   -20,   -26,   -26,   -26,   -26,   -15,
   -24,    -8,   -26,   -26,   -26,   -26,   -26,   -12,   -25,    -9,
   -26,   -26,   -17,   -26,   -26,   -13,   -26,   -18 ]

racc_goto_table = [
     1,     7,    10,    14,    17,    19,    27,    55,    30,    61,
    43,    41,    64,    32,    33,    54 ]

racc_goto_check = [
     1,     2,     3,     4,     5,     6,     7,     8,     9,    10,
    11,    12,    13,    14,    15,    16 ]

racc_goto_pointer = [
   nil,     0,    -5,    -6,   -10,   -11,   -10,   -12,   -44,   -12,
   -48,   -27,   -24,   -50,    -9,   -11,   -35 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  5, 29, :_reduce_1,
  5, 30, :_reduce_2,
  1, 31, :_reduce_3,
  1, 31, :_reduce_4,
  0, 32, :_reduce_5,
  3, 32, :_reduce_6,
  0, 35, :_reduce_7,
  0, 36, :_reduce_8,
  8, 33, :_reduce_9,
  2, 33, :_reduce_10,
  0, 37, :_reduce_11,
  0, 38, :_reduce_12,
  10, 34, :_reduce_13,
  0, 39, :_reduce_14,
  5, 34, :_reduce_15,
  0, 40, :_reduce_16,
  0, 41, :_reduce_17,
  12, 34, :_reduce_18,
  0, 42, :_reduce_19,
  4, 34, :_reduce_20,
  1, 34, :_reduce_21,
  1, 34, :_reduce_22,
  0, 43, :_reduce_23,
  0, 44, :_reduce_24,
  7, 34, :_reduce_25 ]

racc_reduce_n = 26

racc_shift_n = 68

racc_token_table = {
  false => 0,
  :error => 1,
  :PROGRAM => 2,
  :ID => 3,
  :LEFT_BRACKET => 4,
  :RIGHT_BRACKET => 5,
  :FUNCTION => 6,
  :LEFT_PARENTHESIS => 7,
  :RIGHT_PARENTHESIS => 8,
  :ORIGIN => 9,
  :COMMA => 10,
  :block => 11,
  :instruction_list => 12,
  :var_declaration => 13,
  :VAR => 14,
  :var_declaration_list => 15,
  :SEMICOLON => 16,
  :var_declaration_list1 => 17,
  :OP_ASSIGN => 18,
  :var_options => 19,
  :var_assign => 20,
  :var_value => 21,
  :constant => 22,
  :CST_STRING => 23,
  :CST_INTEGER => 24,
  :CST_DECIMAL => 25,
  :CST_BOOLEAN => 26,
  :array_access => 27 }

racc_nt_base = 28

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "PROGRAM",
  "ID",
  "LEFT_BRACKET",
  "RIGHT_BRACKET",
  "FUNCTION",
  "LEFT_PARENTHESIS",
  "RIGHT_PARENTHESIS",
  "ORIGIN",
  "COMMA",
  "block",
  "instruction_list",
  "var_declaration",
  "VAR",
  "var_declaration_list",
  "SEMICOLON",
  "var_declaration_list1",
  "OP_ASSIGN",
  "var_options",
  "var_assign",
  "var_value",
  "constant",
  "CST_STRING",
  "CST_INTEGER",
  "CST_DECIMAL",
  "CST_BOOLEAN",
  "array_access",
  "$start",
  "program",
  "function",
  "function_type",
  "parameter_list",
  "parameter_list1",
  "instruction",
  "@1",
  "@2",
  "@3",
  "@4",
  "@5",
  "@6",
  "@7",
  "@8",
  "@9",
  "@10" ]

Racc_debug_parser = true

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parser.y', 3)
  def _reduce_1(val, _values, result)
     puts "Programa compilado" 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 6)
  def _reduce_2(val, _values, result)
     puts 'funcion' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 9)
  def _reduce_3(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 10)
  def _reduce_4(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 13)
  def _reduce_5(val, _values, result)
     puts 'empty!' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 14)
  def _reduce_6(val, _values, result)
     puts 'id list1' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 17)
  def _reduce_7(val, _values, result)
     puts 'comma' 
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 20)
  def _reduce_8(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 23)
  def _reduce_9(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 24)
  def _reduce_10(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 27)
  def _reduce_11(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 30)
  def _reduce_12(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 33)
  def _reduce_13(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 34)
  def _reduce_14(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 37)
  def _reduce_15(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 38)
  def _reduce_16(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 41)
  def _reduce_17(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 44)
  def _reduce_18(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 45)
  def _reduce_19(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 48)
  def _reduce_20(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 49)
  def _reduce_21(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 50)
  def _reduce_22(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 51)
  def _reduce_23(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 54)
  def _reduce_24(val, _values, result)
    
    result
  end
.,.,

module_eval(<<'.,.,', 'parser.y', 57)
  def _reduce_25(val, _values, result)
    
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Mate
